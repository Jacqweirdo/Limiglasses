#include <SoftwareSerial.h>

// Pines para el sensor ultrasonido
int TRIG = 10;
int ECO = 9;
// Pines para el LED y el buzzer
int LED = 3;
const int pBuzzer = 12;
// Variables para la distancia
int distancia;
int duracion;
// Umbral de distancia para activar el buzzer y el LED (en centímetros)
int umbralDistancia = 1000; // Puedes cambiar este valor según tus necesidades

// Configurar SoftwareSerial
SoftwareSerial btSerial(2, 3); // RX, TX

void setup() {
  pinMode(TRIG, OUTPUT);
  pinMode(ECO, INPUT);
  pinMode(LED, OUTPUT);
  pinMode(pBuzzer, OUTPUT);

  // Iniciar comunicación Serial y Bluetooth
  Serial.begin(9600);
  btSerial.begin(9600); // Asegúrate de que el baud rate coincida con el del módulo HC-05
}
//Cambio 
void loop() {
  // Comprobar si hay datos disponibles desde Bluetooth
  if (btSerial.available()) {
    umbralDistancia = btSerial.parseInt(); // Leer la nueva distancia de calibración
    btSerial.flush(); // Limpiar el buffer de Serial para evitar lecturas falsas
  }

  digitalWrite(TRIG, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);
  
  duracion = pulseIn(ECO, HIGH);
  distancia = duracion / 58.2;
  
  // Imprime la distancia en el Serial Monitor y envíala también por Bluetooth
  Serial.println(distancia);
  btSerial.println(distancia);
  delay(200);

  // Usa el umbral de distancia para determinar si activar el LED y el buzzer
  if (distancia <= umbralDistancia && distancia >= 0) {
    digitalWrite(LED, HIGH);
    digitalWrite(pBuzzer, HIGH);
    delay(100);
    digitalWrite(LED, LOW);
    digitalWrite(pBuzzer, LOW);
  }
}
